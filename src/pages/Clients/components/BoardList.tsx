import React, { useState } from 'react';
import { Plus, MoreVertical, Copy, Edit2, Trash2, Eye, EyeOff } from 'lucide-react';
import { useKanbanStore } from '../store/kanbanStore';
import { motion } from 'framer-motion';
import { useThemeStore } from '../../../store/themeStore';
import { useToast } from '../../../hooks/useToast';

export function BoardList() {
  const { boards, activeBoard, addList } = useKanbanStore();
  const { theme } = useThemeStore();
  const isDark = theme === 'dark';
  const board = boards.find(b => b.id === activeBoard);
  const [showCreateListModal, setShowCreateListModal] = useState(false);
  const [newListTitle, setNewListTitle] = useState('');
  const [newListColor, setNewListColor] = useState('');
  const { showToast } = useToast();

  const handleAddList = () => {
    setShowCreateListModal(true);
  };

  const handleCreateList = () => {
    if (newListTitle.trim() && board) {
      const newList = {
        id: '', // will be generated by the store
        title: newListTitle.trim(),
        cards: [],
        color: newListColor || undefined
      };
      addList(board.id, newList);
      setNewListTitle('');
      setNewListColor('');
      setShowCreateListModal(false);
      showToast('Lista criada com sucesso!', 'success');
    }
  };

  const predefinedColors = [
    '#FF4136', // Vermelho
    '#FF851B', // Laranja
    '#FFDC00', // Amarelo
    '#2ECC40', // Verde
    '#00B5AD', // Verde-Ã¡gua
    '#39CCCC', // Ciano
    '#0074D9', // Azul
    '#7F00FF', // Roxo
    '#B10DC9', // Roxo escuro
    '#F012BE', // Rosa
    '#FF4081', // Rosa claro
    '#85144b', // Vinho
  ];

  return (
    <div className="p-4">
      {board && (
        <button
          onClick={handleAddList}
          className={`flex-shrink-0 w-80 h-fit p-3 flex items-center justify-center gap-2 text-sm ${
            isDark 
              ? 'bg-[#1e1f25] text-gray-400 hover:bg-[#282a33]' 
              : 'bg-gray-200 text-gray-800 hover:bg-gray-300'
          } rounded-lg transition-colors cursor-pointer`}
        >
          <Plus className="w-5 h-5" />
          Adicionar Lista
        </button>
      )}

      {showCreateListModal && (
        <div className="fixed inset-0 bg-black/50 flex items-center justify-center z-50">
          <div className={`w-full max-w-md p-6 rounded-lg shadow-xl ${isDark ? 'bg-dark-800' : 'bg-white'}`}>
            <h3 className={`text-lg font-medium mb-4 ${isDark ? 'text-gray-100' : 'text-gray-900'}`}>
              Nova Lista
            </h3>
            
            <div className="space-y-4">
              <div>
                <label className={`block text-sm font-medium mb-1 ${isDark ? 'text-gray-300' : 'text-gray-700'}`}>
                  Nome da lista
                </label>
                <input
                  type="text"
                  value={newListTitle}
                  onChange={(e) => setNewListTitle(e.target.value)}
                  className={`w-full px-3 py-2 rounded-lg border ${
                    isDark 
                      ? 'bg-dark-700 border-gray-600 text-gray-100' 
                      : 'bg-white border-gray-300 text-gray-900'
                  } focus:outline-none focus:ring-2 focus:ring-[#7f00ff]`}
                  placeholder="Digite o nome da lista"
                  autoFocus
                />
              </div>

              <div>
                <label className={`block text-sm font-medium mb-1 ${isDark ? 'text-gray-300' : 'text-gray-700'}`}>
                  Cor (opcional)
                </label>
                <div className="flex flex-wrap gap-2">
                  {predefinedColors.map((color) => (
                    <button
                      key={color}
                      onClick={() => setNewListColor(color)}
                      className={`w-8 h-8 rounded-full transition-all ${
                        newListColor === color ? 'ring-2 ring-[#7f00ff] ring-offset-2 ring-offset-dark-800' : ''
                      }`}
                      style={{ backgroundColor: color }}
                    />
                  ))}
                </div>
              </div>
            </div>

            <div className="flex justify-end gap-3 mt-6">
              <button
                onClick={() => {
                  setShowCreateListModal(false);
                  setNewListTitle('');
                  setNewListColor('');
                }}
                className={`px-4 py-2 rounded-lg ${
                  isDark 
                    ? 'text-gray-300 hover:bg-gray-700' 
                    : 'text-gray-700 hover:bg-gray-100'
                }`}
              >
                Cancelar
              </button>
              <button
                onClick={handleCreateList}
                disabled={!newListTitle.trim()}
                className="px-4 py-2 bg-[#7f00ff] text-white rounded-lg hover:bg-[#7f00ff]/90 disabled:opacity-50 disabled:cursor-not-allowed"
              >
                Criar Lista
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}
